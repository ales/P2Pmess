@using P2PChat.Models
@using P2PChat.ViewModels
@model IndexViewModel

<style>
    body {
        margin: 0;
        font-family: sans-serif
    }

    #app {
        display: flex;
        flex-direction: column;
        position: absolute;
        padding: 0;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }

    header {
        flex-shrink: 0;
        flex-grow: 0;
    }

    main {
        overflow: auto;
        flex-grow: 1;
        display: flex;
        flex-direction: column-reverse;
    }

    div {
        padding: 1ex 1em
    }

    p {
        margin: 0
    }

    strong, code {
        font-size: 80%;
        color: #999
    }

    footer {
        background: #ccc
    }

    form {
        display: flex
    }

    textarea {
        flex-grow: 1
    }

    .mine {
        text-align: right;
    }

    #app {
        max-width: 60em;
        margin: 0 auto;
    }

    aside {
        position:absolute;
        right:0;
        background: #ccc;
        padding: 1ex;
    }

    aside code {
        color: black;
    }

</style>

<div id="app">
    <aside>
        @foreach (var p in Model.Peers)
        {
            var diff = DateTime.Now - DateTimeOffset.FromUnixTimeMilliseconds(p.LastSeen);
            <p>
                @if (diff.TotalSeconds < 30)
                {
                    <b>🟢</b>
                }
                else if (diff.TotalSeconds < 90)
                {
                    <b>🟠</b>
                }
                else
                {
                    <b>⚪️</b>
                }
                @p.LastId<br />
                <code>@p.IPPort</code>
            </p>
        }
    </aside>
    <main>
        @foreach (var m in Model.Messages)
        {
            <div class="@Model.ClassBinding(m.Username)">
                <strong>@m.Username</strong>
                <code>@DateTimeOffset.FromUnixTimeMilliseconds(m.Timestamp).ToLocalTime()</code>
                <p>@m.Text</p>
            </div>
        }
    </main>
    <footer>
        <form method="post" action="@Url.Action("post")">
            <textarea name="Text"></textarea>
            <input type="submit" />
        </form>
    </footer>
</div>